;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/11/2023 14:41:27
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2829      	GOTO       41
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A3      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A4      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;ProjectInterrupt.c,3 :: 		void interrupt() {
;ProjectInterrupt.c,4 :: 		if (INTF_bit) {
0x000B	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x000C	0x2815      	GOTO       L_interrupt0
;ProjectInterrupt.c,5 :: 		control = ~control;  // Inverte o valor da variável 'control'
0x000D	0x3001      	MOVLW      1
0x000E	0x06A2      	XORWF      _control, 1
;ProjectInterrupt.c,6 :: 		INTF_bit = 0x00;      // Limpa a flag de interrupção externa
0x000F	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;ProjectInterrupt.c,8 :: 		if (control) {
0x0010	0x1C22      	BTFSS      _control, BitPos(_control+0)
0x0011	0x2814      	GOTO       L_interrupt1
;ProjectInterrupt.c,9 :: 		RB5_bit = 0x01;  // Se 'control' é verdadeiro, define RB5 como 1
0x0012	0x1686      	BSF        RB5_bit, BitPos(RB5_bit+0)
;ProjectInterrupt.c,10 :: 		} else {
0x0013	0x2815      	GOTO       L_interrupt2
L_interrupt1:
;ProjectInterrupt.c,11 :: 		RB5_bit = 0x00;  // Se 'control' é falso, define RB5 como 0
0x0014	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
;ProjectInterrupt.c,12 :: 		}
L_interrupt2:
;ProjectInterrupt.c,13 :: 		}
L_interrupt0:
;ProjectInterrupt.c,14 :: 		}
L_end_interrupt:
L__interrupt8:
0x0015	0x0824      	MOVF       ___savePCLATH, 0
0x0016	0x008A      	MOVWF      PCLATH
0x0017	0x0E23      	SWAPF      ___saveSTATUS, 0
0x0018	0x0083      	MOVWF      STATUS
0x0019	0x0EFF      	SWAPF      R15, 1
0x001A	0x0E7F      	SWAPF      R15, 0
0x001B	0x0009      	RETFIE
; end of _interrupt
_Inicia:
;ProjectInterrupt.c,16 :: 		void Inicia() {
;ProjectInterrupt.c,20 :: 		GIE_bit = 0x01;    // Habilita interrupções globais
0x001C	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;ProjectInterrupt.c,21 :: 		PEIE_bit = 0x00;   // Desabilita interrupções periféricas
0x001D	0x130B      	BCF        PEIE_bit, BitPos(PEIE_bit+0)
;ProjectInterrupt.c,22 :: 		INTE_bit = 0x01;   // Habilita interrupção externa
0x001E	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;ProjectInterrupt.c,23 :: 		INTEDG_bit = 0x00; // Configura borda de descida para a interrupção externa
0x001F	0x1683      	BSF        STATUS, 5
0x0020	0x1303      	BCF        STATUS, 6
0x0021	0x1301      	BCF        INTEDG_bit, BitPos(INTEDG_bit+0)
;ProjectInterrupt.c,25 :: 		TRISB0_bit = 0x01; // Configura RB0 como entrada
0x0022	0x1406      	BSF        TRISB0_bit, BitPos(TRISB0_bit+0)
;ProjectInterrupt.c,26 :: 		TRISB4_bit = 0x00; // Configura RB4 como saída
0x0023	0x1206      	BCF        TRISB4_bit, BitPos(TRISB4_bit+0)
;ProjectInterrupt.c,27 :: 		TRISB5_bit = 0x00; // Configura RB5 como saída
0x0024	0x1286      	BCF        TRISB5_bit, BitPos(TRISB5_bit+0)
;ProjectInterrupt.c,28 :: 		PORTB = 0x00;      // Limpa o registrador PORTB
0x0025	0x1283      	BCF        STATUS, 5
0x0026	0x0186      	CLRF       PORTB
;ProjectInterrupt.c,30 :: 		control = 0x00;    // Inicializa a variável 'control' com 0
0x0027	0x1022      	BCF        _control, BitPos(_control+0)
;ProjectInterrupt.c,31 :: 		}
L_end_Inicia:
0x0028	0x0008      	RETURN
; end of _Inicia
_main:
;ProjectInterrupt.c,33 :: 		void main() {
;ProjectInterrupt.c,34 :: 		Inicia();  // Chama a função de inicialização
0x0029	0x201C      	CALL       _Inicia
;ProjectInterrupt.c,36 :: 		while (1) {
L_main3:
;ProjectInterrupt.c,37 :: 		RB4_bit = 1;      // Liga o pino RB4
0x002A	0x1606      	BSF        RB4_bit, BitPos(RB4_bit+0)
;ProjectInterrupt.c,38 :: 		delay_ms(2000);   // Aguarda 2 segundos
0x002B	0x300B      	MOVLW      11
0x002C	0x00FB      	MOVWF      R11
0x002D	0x3026      	MOVLW      38
0x002E	0x00FC      	MOVWF      R12
0x002F	0x305D      	MOVLW      93
0x0030	0x00FD      	MOVWF      R13
L_main5:
0x0031	0x0BFD      	DECFSZ     R13, 1
0x0032	0x2831      	GOTO       L_main5
0x0033	0x0BFC      	DECFSZ     R12, 1
0x0034	0x2831      	GOTO       L_main5
0x0035	0x0BFB      	DECFSZ     R11, 1
0x0036	0x2831      	GOTO       L_main5
0x0037	0x0000      	NOP
0x0038	0x0000      	NOP
;ProjectInterrupt.c,39 :: 		RB4_bit = 0;      // Desliga o pino RB4
0x0039	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
;ProjectInterrupt.c,40 :: 		delay_ms(2000);   // Aguarda novamente 2 segundos
0x003A	0x300B      	MOVLW      11
0x003B	0x00FB      	MOVWF      R11
0x003C	0x3026      	MOVLW      38
0x003D	0x00FC      	MOVWF      R12
0x003E	0x305D      	MOVLW      93
0x003F	0x00FD      	MOVWF      R13
L_main6:
0x0040	0x0BFD      	DECFSZ     R13, 1
0x0041	0x2840      	GOTO       L_main6
0x0042	0x0BFC      	DECFSZ     R12, 1
0x0043	0x2840      	GOTO       L_main6
0x0044	0x0BFB      	DECFSZ     R11, 1
0x0045	0x2840      	GOTO       L_main6
0x0046	0x0000      	NOP
0x0047	0x0000      	NOP
;ProjectInterrupt.c,41 :: 		}
0x0048	0x282A      	GOTO       L_main3
;ProjectInterrupt.c,42 :: 		}
L_end_main:
0x0049	0x2849      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [24]    _interrupt
0x001C      [13]    _Inicia
0x0029      [33]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0006       [0]    RB4_bit
0x0006       [0]    RB5_bit
0x000A       [1]    PCLATH
0x000B       [0]    PEIE_bit
0x000B       [0]    GIE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    INTE_bit
0x0020       [2]    ___DoICPAddr
0x0022       [0]    _control
0x0023       [1]    ___saveSTATUS
0x0024       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB0_bit
